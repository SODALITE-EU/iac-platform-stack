apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus-skydive-connector
  namespace: sodalite-services
spec:
  serviceName: prometheus-skydive-connector
  selector:
    matchLabels:
      app: prometheus-skydive-connector
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus-skydive-connector
    spec:
      securityContext:
        fsGroup: 65534
      initContainers:
      - name: init-vault
        image: curlimages/curl
        command: [ 'sh', '-c', '
          set -xe
          curl -X PUT -d "{ \"Name\": \"consul-registered-skydive-exporters\", \"ID\": \"fakeuniqueid-skydive-exporter\", \"Address\": \"prometheus-skydive-connector.sodalite-services.svc.cluster.local\", \"Port\": 9100 }" consul.sodalite-services.svc.cluster.local:8500/v1/agent/service/register' ]
      containers:
      - image: sodaliteh2020/prometheus-skydive-connector:latest
        name: prometheus-skydive-connector
        args: [ "/etc/prom_sky_con.yml" ]
        ports:
        - containerPort: 9100
          protocol: TCP
        volumeMounts:
        - name: prometheus-skydive-storage
          mountPath: /prometheus
        env:
        - name: SKYDIVE_PIPELINE_SUBSCRIBER_URL
          value: ws://skydive-analyzer.sodalite-services.svc.cluster.local:8082/ws/subscriber/flow
        - name: SKYDIVE_ANALYZERS
          value: skydive-analyzer.sodalite-services.svc.cluster.local:8082
  volumeClaimTemplates:
  - metadata:
      name: prometheus-skydive-storage
      namespace: sodalite-services
    spec:
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 10Gi